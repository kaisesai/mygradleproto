// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta_rpc.proto

package com.liukai.proto.data;

public final class MetaRpc {
  private MetaRpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BrandQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:look.meta.BrandQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 通过名称、拼音、search word来检索
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * 通过名称、拼音、search word来检索
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * 名称前缀搜索
     * </pre>
     *
     * <code>optional string name_prefix = 2;</code>
     */
    java.lang.String getNamePrefix();
    /**
     * <pre>
     * 名称前缀搜索
     * </pre>
     *
     * <code>optional string name_prefix = 2;</code>
     */
    com.google.protobuf.ByteString
        getNamePrefixBytes();

    /**
     * <pre>
     * 国家编码code
     * </pre>
     *
     * <code>optional string country = 3;</code>
     */
    java.lang.String getCountry();
    /**
     * <pre>
     * 国家编码code
     * </pre>
     *
     * <code>optional string country = 3;</code>
     */
    com.google.protobuf.ByteString
        getCountryBytes();

    /**
     * <pre>
     * '': 全部, 'true': 发布, otherwise: 未发布
     * </pre>
     *
     * <code>optional string if_publish = 4;</code>
     */
    java.lang.String getIfPublish();
    /**
     * <pre>
     * '': 全部, 'true': 发布, otherwise: 未发布
     * </pre>
     *
     * <code>optional string if_publish = 4;</code>
     */
    com.google.protobuf.ByteString
        getIfPublishBytes();
  }
  /**
   * <pre>
   * brand 列表过滤
   * </pre>
   *
   * Protobuf type {@code look.meta.BrandQuery}
   */
  public  static final class BrandQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:look.meta.BrandQuery)
      BrandQueryOrBuilder {
    // Use BrandQuery.newBuilder() to construct.
    private BrandQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BrandQuery() {
      name_ = "";
      namePrefix_ = "";
      country_ = "";
      ifPublish_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BrandQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              namePrefix_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              country_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              ifPublish_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.liukai.proto.data.MetaRpc.internal_static_look_meta_BrandQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.liukai.proto.data.MetaRpc.internal_static_look_meta_BrandQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.liukai.proto.data.MetaRpc.BrandQuery.class, com.liukai.proto.data.MetaRpc.BrandQuery.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * 通过名称、拼音、search word来检索
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 通过名称、拼音、search word来检索
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_PREFIX_FIELD_NUMBER = 2;
    private volatile java.lang.Object namePrefix_;
    /**
     * <pre>
     * 名称前缀搜索
     * </pre>
     *
     * <code>optional string name_prefix = 2;</code>
     */
    public java.lang.String getNamePrefix() {
      java.lang.Object ref = namePrefix_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namePrefix_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 名称前缀搜索
     * </pre>
     *
     * <code>optional string name_prefix = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNamePrefixBytes() {
      java.lang.Object ref = namePrefix_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namePrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTRY_FIELD_NUMBER = 3;
    private volatile java.lang.Object country_;
    /**
     * <pre>
     * 国家编码code
     * </pre>
     *
     * <code>optional string country = 3;</code>
     */
    public java.lang.String getCountry() {
      java.lang.Object ref = country_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        country_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 国家编码code
     * </pre>
     *
     * <code>optional string country = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCountryBytes() {
      java.lang.Object ref = country_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        country_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IF_PUBLISH_FIELD_NUMBER = 4;
    private volatile java.lang.Object ifPublish_;
    /**
     * <pre>
     * '': 全部, 'true': 发布, otherwise: 未发布
     * </pre>
     *
     * <code>optional string if_publish = 4;</code>
     */
    public java.lang.String getIfPublish() {
      java.lang.Object ref = ifPublish_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ifPublish_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * '': 全部, 'true': 发布, otherwise: 未发布
     * </pre>
     *
     * <code>optional string if_publish = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIfPublishBytes() {
      java.lang.Object ref = ifPublish_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ifPublish_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getNamePrefixBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, namePrefix_);
      }
      if (!getCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, country_);
      }
      if (!getIfPublishBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ifPublish_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getNamePrefixBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, namePrefix_);
      }
      if (!getCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, country_);
      }
      if (!getIfPublishBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ifPublish_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.liukai.proto.data.MetaRpc.BrandQuery)) {
        return super.equals(obj);
      }
      com.liukai.proto.data.MetaRpc.BrandQuery other = (com.liukai.proto.data.MetaRpc.BrandQuery) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getNamePrefix()
          .equals(other.getNamePrefix());
      result = result && getCountry()
          .equals(other.getCountry());
      result = result && getIfPublish()
          .equals(other.getIfPublish());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NAME_PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getNamePrefix().hashCode();
      hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getCountry().hashCode();
      hash = (37 * hash) + IF_PUBLISH_FIELD_NUMBER;
      hash = (53 * hash) + getIfPublish().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.liukai.proto.data.MetaRpc.BrandQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.liukai.proto.data.MetaRpc.BrandQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * brand 列表过滤
     * </pre>
     *
     * Protobuf type {@code look.meta.BrandQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:look.meta.BrandQuery)
        com.liukai.proto.data.MetaRpc.BrandQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.liukai.proto.data.MetaRpc.internal_static_look_meta_BrandQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.liukai.proto.data.MetaRpc.internal_static_look_meta_BrandQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.liukai.proto.data.MetaRpc.BrandQuery.class, com.liukai.proto.data.MetaRpc.BrandQuery.Builder.class);
      }

      // Construct using com.liukai.proto.data.MetaRpc.BrandQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        namePrefix_ = "";

        country_ = "";

        ifPublish_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.liukai.proto.data.MetaRpc.internal_static_look_meta_BrandQuery_descriptor;
      }

      public com.liukai.proto.data.MetaRpc.BrandQuery getDefaultInstanceForType() {
        return com.liukai.proto.data.MetaRpc.BrandQuery.getDefaultInstance();
      }

      public com.liukai.proto.data.MetaRpc.BrandQuery build() {
        com.liukai.proto.data.MetaRpc.BrandQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.liukai.proto.data.MetaRpc.BrandQuery buildPartial() {
        com.liukai.proto.data.MetaRpc.BrandQuery result = new com.liukai.proto.data.MetaRpc.BrandQuery(this);
        result.name_ = name_;
        result.namePrefix_ = namePrefix_;
        result.country_ = country_;
        result.ifPublish_ = ifPublish_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.liukai.proto.data.MetaRpc.BrandQuery) {
          return mergeFrom((com.liukai.proto.data.MetaRpc.BrandQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.liukai.proto.data.MetaRpc.BrandQuery other) {
        if (other == com.liukai.proto.data.MetaRpc.BrandQuery.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getNamePrefix().isEmpty()) {
          namePrefix_ = other.namePrefix_;
          onChanged();
        }
        if (!other.getCountry().isEmpty()) {
          country_ = other.country_;
          onChanged();
        }
        if (!other.getIfPublish().isEmpty()) {
          ifPublish_ = other.ifPublish_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.liukai.proto.data.MetaRpc.BrandQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.liukai.proto.data.MetaRpc.BrandQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * 通过名称、拼音、search word来检索
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 通过名称、拼音、search word来检索
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 通过名称、拼音、search word来检索
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 通过名称、拼音、search word来检索
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 通过名称、拼音、search word来检索
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object namePrefix_ = "";
      /**
       * <pre>
       * 名称前缀搜索
       * </pre>
       *
       * <code>optional string name_prefix = 2;</code>
       */
      public java.lang.String getNamePrefix() {
        java.lang.Object ref = namePrefix_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namePrefix_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 名称前缀搜索
       * </pre>
       *
       * <code>optional string name_prefix = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNamePrefixBytes() {
        java.lang.Object ref = namePrefix_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namePrefix_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 名称前缀搜索
       * </pre>
       *
       * <code>optional string name_prefix = 2;</code>
       */
      public Builder setNamePrefix(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namePrefix_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 名称前缀搜索
       * </pre>
       *
       * <code>optional string name_prefix = 2;</code>
       */
      public Builder clearNamePrefix() {
        
        namePrefix_ = getDefaultInstance().getNamePrefix();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 名称前缀搜索
       * </pre>
       *
       * <code>optional string name_prefix = 2;</code>
       */
      public Builder setNamePrefixBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namePrefix_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object country_ = "";
      /**
       * <pre>
       * 国家编码code
       * </pre>
       *
       * <code>optional string country = 3;</code>
       */
      public java.lang.String getCountry() {
        java.lang.Object ref = country_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          country_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 国家编码code
       * </pre>
       *
       * <code>optional string country = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCountryBytes() {
        java.lang.Object ref = country_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          country_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 国家编码code
       * </pre>
       *
       * <code>optional string country = 3;</code>
       */
      public Builder setCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        country_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 国家编码code
       * </pre>
       *
       * <code>optional string country = 3;</code>
       */
      public Builder clearCountry() {
        
        country_ = getDefaultInstance().getCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 国家编码code
       * </pre>
       *
       * <code>optional string country = 3;</code>
       */
      public Builder setCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        country_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ifPublish_ = "";
      /**
       * <pre>
       * '': 全部, 'true': 发布, otherwise: 未发布
       * </pre>
       *
       * <code>optional string if_publish = 4;</code>
       */
      public java.lang.String getIfPublish() {
        java.lang.Object ref = ifPublish_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ifPublish_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * '': 全部, 'true': 发布, otherwise: 未发布
       * </pre>
       *
       * <code>optional string if_publish = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIfPublishBytes() {
        java.lang.Object ref = ifPublish_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ifPublish_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * '': 全部, 'true': 发布, otherwise: 未发布
       * </pre>
       *
       * <code>optional string if_publish = 4;</code>
       */
      public Builder setIfPublish(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ifPublish_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * '': 全部, 'true': 发布, otherwise: 未发布
       * </pre>
       *
       * <code>optional string if_publish = 4;</code>
       */
      public Builder clearIfPublish() {
        
        ifPublish_ = getDefaultInstance().getIfPublish();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * '': 全部, 'true': 发布, otherwise: 未发布
       * </pre>
       *
       * <code>optional string if_publish = 4;</code>
       */
      public Builder setIfPublishBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ifPublish_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:look.meta.BrandQuery)
    }

    // @@protoc_insertion_point(class_scope:look.meta.BrandQuery)
    private static final com.liukai.proto.data.MetaRpc.BrandQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.liukai.proto.data.MetaRpc.BrandQuery();
    }

    public static com.liukai.proto.data.MetaRpc.BrandQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BrandQuery>
        PARSER = new com.google.protobuf.AbstractParser<BrandQuery>() {
      public BrandQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BrandQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BrandQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BrandQuery> getParserForType() {
      return PARSER;
    }

    public com.liukai.proto.data.MetaRpc.BrandQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_look_meta_BrandQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_look_meta_BrandQuery_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016meta_rpc.proto\022\tlook.meta\032\nmeta.proto\032" +
      "\017rpc_model.proto\032\031google/protobuf/any.pr" +
      "oto\032\036google/protobuf/wrappers.proto\032\033goo" +
      "gle/protobuf/empty.proto\"T\n\nBrandQuery\022\014" +
      "\n\004name\030\001 \001(\t\022\023\n\013name_prefix\030\002 \001(\t\022\017\n\007cou" +
      "ntry\030\003 \001(\t\022\022\n\nif_publish\030\004 \001(\t2\237\003\n\013MetaS" +
      "ervice\0223\n\004Ping\022\026.google.protobuf.Empty\032\023" +
      ".look.meta.PingResp\022=\n\010GetBrand\022\033.google" +
      ".protobuf.Int64Value\032\024.google.protobuf.A" +
      "ny\0227\n\tGetBrands\022\023.look.meta.LongList\032\025.l",
      "ook.meta.LongKeyMap\0223\n\tSaveBrand\022\024.look." +
      "meta.UpdateReq\032\020.look.meta.Brand\0224\n\tList" +
      "Brand\022\022.look.meta.ListReq\032\023.look.meta.Li" +
      "stResp\022@\n\nCountBrand\022\025.look.meta.BrandQu" +
      "ery\032\033.google.protobuf.Int32Value\0226\n\013Sear" +
      "chBrand\022\022.look.meta.ListReq\032\023.look.meta." +
      "ListRespB \n\025com.liukai.proto.dataB\007MetaR" +
      "pcb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.liukai.proto.MetaModel.getDescriptor(),
          com.liukai.proto.data.RpcModel.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        }, assigner);
    internal_static_look_meta_BrandQuery_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_look_meta_BrandQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_look_meta_BrandQuery_descriptor,
        new java.lang.String[] { "Name", "NamePrefix", "Country", "IfPublish", });
    com.liukai.proto.MetaModel.getDescriptor();
    com.liukai.proto.data.RpcModel.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
